services:
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./dashboards:/etc/grafana/dashboards
      - ./provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
  
  init-storage:
    image: alpine
    command: ["/bin/sh", "-c", "mkdir -p /app/uploads"]
    volumes:
      - file-storage:/app/uploads
  
  api-gateway:
    build: ./
    ports:
      - "8080:8080"  
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - file-storage:/app/uploads
      - ./cmd/config.yaml:/app/cmd/config.yaml
        
  postgres:
    image: postgres:14.10-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 5

volumes:
  pgdata:
  file-storage: